Prueba Defecto
-------------------
;Creacion del sistema
(define S0 (system "newSystem"))
S0
;añadiendo unidades. Incluye caso S2 que intenta añadir unidad con una letra que ya existe
(define S1 ((run S0 add-drive) #\C "SO" 1000))
S1
(define S2 ((run S1 add-drive) #\C "SO1" 3000))
S2
(define S3 ((run S2 add-drive) #\D "Util" 2000))
S3
;añadiendo usuarios. Incluye caso S6 que intenta registrar usuario duplicado
(define S4 ((run S3 add-user) "user1"))
S4
(define S5 ((run S4 add-user) "user1")) ;; retorna system actual sin cambios
S5
(define S6 ((run S5 add-user) "user2"))
S6

------------------------

Prueba 1
-----------------
;Creacion del sistema
(define S0 (system "Sistema_Nuevo"))
S0
;añadiendo unidades. Incluye caso S2 que intenta añadir unidad con una letra que ya existe
(define S1 ((run S0 add-drive) #\C "SO_1" 512))
S1
(define S2 ((run S1 add-drive) #\C "SO_1" 1024))
S2
(define S3 ((run S2 add-drive) #\D "Otro" 256))
S3
;añadiendo usuarios. Incluye caso S6 que intenta registrar usuario duplicado
(define S4 ((run S3 add-user) "Emilio"))
S4
(define S5 ((run S4 add-user) "Emilio")) ;; retorna system actual sin cambios
S5
(define S6 ((run S5 add-user) "Familia"))
S6
------------------------

Prueba 2
----------------------------
;Creacion del sistema
(define S0 (system "SistemaPrincipal"))
S0
;añadiendo unidades. Incluye caso S2 que intenta añadir unidad con una letra que ya existe
(define S1 ((run S0 add-drive) #\C "OS" 256))
S1
(define S2 ((run S1 add-drive) #\C "OS" 512))
S2
(define S3 ((run S2 add-drive) #\D "Trabajo" 1024))
S3
;añadiendo usuarios. Incluye caso S6 que intenta registrar usuario duplicado
(define S4 ((run S3 add-user) "Trabajo_us"))
S4
(define S5 ((run S4 add-user) "Trabajo_us")) ;; retorna system actual sin cambios
S5
(define S6 ((run S5 add-user) "Chill"))
S6
------------------------------

Prueba 3
------------------------------------
;Creacion del sistema
(define S0 (system "Original"))
S0
;añadiendo unidades. Incluye caso S2 que intenta añadir unidad con una letra que ya existe
(define S1 ((run S0 add-drive) #\C "SO" 256))
S1
(define S2 ((run S1 add-drive) #\D "Trabajos" 512))
S2
(define S3 ((run S2 add-drive) #\E "Juegos" 1024))
S3
;añadiendo usuarios.
(define S4 ((run S3 add-user) "Usuario_Trabajo"))
S4
(define S5 ((run S4 add-user) "Usuario_Familia"))
S5
(define S6 ((run S5 add-user) "Usuario_Juegos"))
S6
-----------------------------------------